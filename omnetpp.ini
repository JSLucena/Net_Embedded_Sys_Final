[General]
network = dtu_networks.ring_3sw_network
sim-time-limit = 1.0s

# enable multiple canvas visualizers
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"

# network route activity visualization
*.visualizer.numNetworkRouteVisualizers = 8
*.visualizer.networkRouteVisualizer[0].packetFilter = "\"networkcontrol*\""
*.visualizer.networkRouteVisualizer[0].lineColor = "red1"
*.visualizer.networkRouteVisualizer[1].packetFilter = "\"isochronous*\""
*.visualizer.networkRouteVisualizer[1].lineColor = "blue4"
*.visualizer.networkRouteVisualizer[2].packetFilter = "\"cyclic*\""
*.visualizer.networkRouteVisualizer[2].lineColor = "green1"
*.visualizer.networkRouteVisualizer[3].packetFilter = "\"eventscontrol*\""
*.visualizer.networkRouteVisualizer[3].lineColor = "orange"
*.visualizer.networkRouteVisualizer[4].packetFilter = "\"alarmcommands*\""
*.visualizer.networkRouteVisualizer[4].lineColor = "purple"
*.visualizer.networkRouteVisualizer[5].packetFilter = "\"configdiagnostics*\""
*.visualizer.networkRouteVisualizer[5].lineColor = "yellow4"
*.visualizer.networkRouteVisualizer[6].packetFilter = "\"videoaudiovoice*\""
*.visualizer.networkRouteVisualizer[6].lineColor = "cyan"
*.visualizer.networkRouteVisualizer[7].packetFilter = "\"besteffort*\""
*.visualizer.networkRouteVisualizer[7].lineColor = "silver"

*.*.eth[*].bitrate = 1Gbps

# packet processing delay
*.*.bridging.directionReverser.delayer.typename = "PacketDelayer"
*.*.bridging.directionReverser.delayer.delay = 8us

*.Node_0_0.numApps = 4
*.Node_2_0.numApps = 5
*.Node_1_0.numApps = 3

*.Node_1_0.app[0].typename = "UdpSourceApp"
*.Node_1_0.app[0].display-name = "ATS"
*.Node_1_0.app[0].io.destAddress = "Node_0_0"
*.Node_1_0.app[0].io.destPort = 1
*.Node_1_0.app[0].source.productionInterval = 500000us
*.Node_1_0.app[0].source.initialProductionOffset = 500000us
*.Node_1_0.app[0].source.packetLength = 250B

*.Node_0_0.app[0].typename = "UdpSinkApp"
*.Node_0_0.app[0].io.localPort = 1

*.Node_2_0.app[0].typename = "UdpSourceApp"
*.Node_2_0.app[0].display-name = "ATS"
*.Node_2_0.app[0].io.destAddress = "Node_0_0"
*.Node_2_0.app[0].io.destPort = 1
*.Node_2_0.app[0].source.productionInterval = 500000us
*.Node_2_0.app[0].source.initialProductionOffset = 500000us
*.Node_2_0.app[0].source.packetLength = 250B

*.Node_0_0.app[1].typename = "UdpSinkApp"
*.Node_0_0.app[1].io.localPort = 1

*.Node_0_0.app[2].typename = "UdpSourceApp"
*.Node_0_0.app[2].display-name = "ATS"
*.Node_0_0.app[2].io.destAddress = "Node_2_0"
*.Node_0_0.app[2].io.destPort = 1
*.Node_0_0.app[2].source.productionInterval = 500000us
*.Node_0_0.app[2].source.initialProductionOffset = 500000us
*.Node_0_0.app[2].source.packetLength = 250B

*.Node_2_0.app[1].typename = "UdpSinkApp"
*.Node_2_0.app[1].io.localPort = 1

*.Node_1_0.app[1].typename = "UdpSourceApp"
*.Node_1_0.app[1].display-name = "ATS"
*.Node_1_0.app[1].io.destAddress = "Node_2_0"
*.Node_1_0.app[1].io.destPort = 2
*.Node_1_0.app[1].source.productionInterval = 1000us
*.Node_1_0.app[1].source.initialProductionOffset = 1000us
*.Node_1_0.app[1].source.packetLength = 100B

*.Node_2_0.app[2].typename = "UdpSinkApp"
*.Node_2_0.app[2].io.localPort = 2

*.Node_1_0.app[2].typename = "UdpSourceApp"
*.Node_1_0.app[2].display-name = "ATS"
*.Node_1_0.app[2].io.destAddress = "Node_2_0"
*.Node_1_0.app[2].io.destPort = 3
*.Node_1_0.app[2].source.productionInterval = 10000us
*.Node_1_0.app[2].source.initialProductionOffset = 10000us
*.Node_1_0.app[2].source.packetLength = 500B

*.Node_2_0.app[3].typename = "UdpSinkApp"
*.Node_2_0.app[3].io.localPort = 3

*.Node_2_0.app[4].typename = "UdpSourceApp"
*.Node_2_0.app[4].display-name = "ATS"
*.Node_2_0.app[4].io.destAddress = "Node_0_0"
*.Node_2_0.app[4].io.destPort = 3
*.Node_2_0.app[4].source.productionInterval = 10000us
*.Node_2_0.app[4].source.initialProductionOffset = 10000us
*.Node_2_0.app[4].source.packetLength = 500B

*.Node_0_0.app[3].typename = "UdpSinkApp"
*.Node_0_0.app[3].io.localPort = 3

*.node*.hasUdp = firstAvailableOrEmpty("Udp") != ""

# steering stream identification and coding
*.node*.bridging.streamIdentifier.identifier.mapping = [
    {stream: "networkcontrol", packetFilter: expr(udp.destPort == 1)},
    {stream: "isochronous", packetFilter: expr(udp.destPort == 2)},
    {stream: "cyclic", packetFilter: expr(udp.destPort == 3)},
]

